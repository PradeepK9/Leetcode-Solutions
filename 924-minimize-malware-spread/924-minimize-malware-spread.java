class Solution {
    int total, infected;
    public void DFS(int src, int[][] graph, boolean[] vis, int[] initial){
        if(vis[src] == true) return;
        if(Arrays.binarySearch(initial, src) >= 0) infected++;
        vis[src] = true; total++;
        
        for(int nbr=0; nbr<graph.length; nbr++)
            if(src != nbr && graph[src][nbr] == 1)
                DFS(nbr, graph, vis, initial);
    }
    
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        boolean[] vis = new boolean[graph.length];
        
        int maxTotal = 0, ans = initial[0];
        for(int src: initial){
            total = infected = 0;
            DFS(src, graph, vis, initial);
            if(total > maxTotal && infected == 1){
                maxTotal = total;
                ans = src;
            }
        }
        return ans;
    }
}